{"version":3,"file":"static/webpack/static/development/pages/list.js.228f0408a7858d591354.hot-update.js","sources":["webpack:///./pages/list.js"],"sourcesContent":["import Layout from '../components/MyLayout';\nconst contentful = require('contentful');\nimport TestHeader from '../components/TestHeader';\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: [],\n      alphabet: {\n        a: 'a',\n        b: 'b',\n        c: 'c',\n        d: 'd',\n        e: 'e',\n        f: 'f',\n        g: 'g',\n        h: 'h',\n        i: 'i',\n        j: 'j',\n        k: 'k',\n        l: 'l',\n        m: 'm',\n        o: 'o',\n        p: 'p',\n        q: 'q',\n        r: 'r',\n        s: 's',\n        t: 't',\n        u: 'u',\n        v: 'v',\n        w: 'w',\n        x: 'x',\n        y: 'y',\n        z: 'z',\n      },\n    };\n  }\n\n  componentDidMount() {\n    const client = contentful.createClient({\n      // This is the space ID. A space is like a project folder in Contentful terms\n      space: 'sqmp3jmwaedr',\n      // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n      accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU',\n    });\n    // content type relates to the content type name in contentful\n    // figured it outttt\n    // 'post' instead of songList, post is linked to author so when post response you get author object as well\n    client.getEntries({ content_type: 'songList' }).then(response => {\n      this.setState({\n        songs: response.items,\n      });\n    });\n  }\n  render() {\n    const list = this.state.songs.map((song, i) => {\n      // console.log(this.state.alphabet);\n      // console.log(song.fields);\n      for (let i = 0; i <= 10; i++) {\n        console.log(i);\n      }\n      return song.fields.b.content[0].content.map((song, i) => {\n        // console.log(song);\n        return song.content.map((song, i) => {\n          // console.log(song);\n          return song.content.map((song, i) => {\n            // console.log(song.value);\n            return (\n              <div key={i}>\n                <p>{song.value}</p>\n                <style jsx>{`\n                  .alphabet {\n                    margin-bottom: 50px;\n                    margin-top: 200px;\n                  }\n                  p {\n                    color: white;\n                  }\n                `}</style>\n              </div>\n            );\n          });\n        });\n      });\n    });\n    return (\n      <Layout>\n        <div className='listWrapper'>\n          <h1 className='contactNeon'>SONG LIST</h1>\n          <div className='list'>{list}</div>\n        </div>\n\n        <p className='alphabet'>\n          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z #\n        </p>\n        <p>songs here and link them with id's contentful is working</p>\n        <style jsx>{`\n          h1 {\n            white-space: nowrap;\n            margin: 0 -5px 0 0;\n            letter-spacing: 5px;\n            line-height: 1;\n            font-size: 7vw;\n            font-family: vibur;\n            font-weight: 100;\n            text-align: center;\n            color: #fee;\n            text-shadow: 0 -40px 100px, 0 0 2px, 0 0 1em #ff4444,\n              0 0 0.5em #ff4444, 0 0 0.1em #ff4444, 0 10px 3px #000;\n          }\n          .listWrapper {\n            margin-top: 25vh;\n          }\n          .list {\n            width: 80%;\n            margin: 0 auto;\n          }\n\n          .alphabet {\n            margin-bottom: 50px;\n            margin-top: 200px;\n          }\n          p {\n            color: white;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAFA;AAFA;AAgCA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AA0CA;;;;AA7HA;AACA;;;;;A","sourceRoot":""}