{"version":3,"file":"static/webpack/static/development/pages/about.js.50263818dbb2f206a6c3.hot-update.js","sources":["webpack:///./pages/about.js"],"sourcesContent":["import Layout from '../components/MyLayout';\nconst contentful = require('contentful');\nimport TestHeader from '../components/TestHeader';\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n    };\n  }\n\n  componentDidMount() {\n    const client = contentful.createClient({\n      // This is the space ID. A space is like a project folder in Contentful terms\n      space: 'sqmp3jmwaedr',\n      // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n      accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU',\n    });\n    // content type relates to the content type name in contentful\n    // figured it outttt\n    // 'post' instead of songList, post is linked to author so when post response you get author object as well\n    client.getEntries({ content_type: 'post' }).then(response => {\n      console.log(response);\n      this.setState({\n        articles: response.items,\n      });\n    });\n  }\n  render() {\n    const ass = this.state.articles.map((article, i) => {\n      console.log(article);\n      return (\n        <div key={i}>\n          <img src={article.fields.featuredImage.fields.file.url} alt='' />\n          {article.fields.title}\n        </div>\n      );\n    });\n    return (\n      <Layout>\n        <TestHeader />\n\n        {ass}\n        <p>This is the about page</p>\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3CA;AACA;;;;;A","sourceRoot":""}