{"version":3,"file":"static/webpack/static/development/pages/media.js.bd4f1b747124fe4c6d65.hot-update.js","sources":["webpack:///./components/ContactComp.js","webpack:///./pages/media.js"],"sourcesContent":["export default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <div className='title'>\n          <h3>GET IN TOUCH</h3>\n        </div>\n        <div className='flex'>\n          <div className='flexOne'>\n            <p>\n              Ideal for corporate events, team-building, holiday parties, client\n              appreciation nights, weddings, birthdays or other personal\n              milestones, live band karaoke with Good Enough Live Karaoke is an\n              epic, interactive entertainment experience. We'll make sure your\n              next party or event is completely awesome. Please let us know if\n              you have any questions or would like a quote:{' '}\n              <a\n                href='mailto:sing@goodenoughlivekaraoke.com?Subject=Hello%20'\n                target='_top'\n              >\n                sing@goodenoughlivekaraoke.com{' '}\n              </a>\n            </p>\n          </div>\n          <div className='flexTwo'>\n            <section id='contact'>\n              <form\n                action='http://www.focuspocus.io/magic/jenn.cowan@gmail.com'\n                method='post'\n              >\n                <fieldset>\n                  <input type='text' name='name' autocomplete='off' required />\n                  <label for='name'>\n                    <span>Name</span>\n                  </label>\n                </fieldset>\n                <fieldset>\n                  <input type='text' name='email' autocomplete='off' required />\n                  <label for='email'>\n                    <span>E-mail</span>\n                  </label>\n                </fieldset>\n                <fieldset>\n                  <textarea\n                    name='message'\n                    id=''\n                    cols='30'\n                    rows='3'\n                    required\n                  ></textarea>\n                  <label for='message'>\n                    <span>Message</span>\n                  </label>\n                </fieldset>\n                <button>\n                  <span>Send</span>\n                  <span>Sent</span>\n                </button>\n              </form>\n            </section>\n          </div>\n        </div>\n        <style jsx>{`\n          svg {\n            display: flex;\n            justify-content: center;\n            width: 100%;\n            margin-top: 70px;\n          }\n          h3 {\n            text-align: center;\n            font-family: 'Concert One', sans-serif;\n            color: #f1f1f1;\n            font-size: 40px;\n            letter-spacing: 5px;\n          }\n\n          .title {\n            width: 100%;\n            background: none;\n            margin: 0 auto;\n            margin-bottom: -30px;\n          }\n\n          .flex {\n            display: flex;\n            width: 100%;\n            max-width: 1400px;\n            margin: 0 auto;\n            background: rgb(25, 3, 22);\n          }\n\n          p {\n            color: #f1f1f1;\n            font-family: 'Montserrat', sans-serif;\n            line-height: 38px;\n            font-size: 20px;\n          }\n\n          a {\n            color: #f1f1f1;\n            transition: 0.4s all;\n          }\n\n          a:hover {\n            opacity: 0.65;\n          }\n\n          .flexOne,\n          .flexTwo {\n            width: 40%;\n            margin-top: 50px;\n          }\n\n          .flexOne {\n            margin-left: 10%;\n          }\n\n          .flexTwo {\n            margin-right: 10%;\n            margin-top: -1%;\n          }\n\n          h1 {\n            white-space: nowrap;\n            margin: 0 -5px 0 0;\n            letter-spacing: 5px;\n            line-height: 1;\n            font-size: 7vw;\n            font-family: 'Montserrat', sans-serif;\n            font-weight: 100;\n            text-align: center;\n            color: #f1f1f1;\n          }\n\n          #contact {\n            padding: 0 20px;\n            border-radius: 2px;\n            margin-bottom: 50px;\n          }\n\n          form {\n            padding: 5%;\n            display: grid;\n            grid-template-column: 1fr;\n            grid-gap: 1em;\n            height: 100%;\n            width: 100%;\n            border-radius: 5px;\n          }\n          fieldset {\n            height: 100%;\n            width: 94.5%;\n            position: relative;\n            border: none;\n            overflow: hidden;\n          }\n          input {\n            outline: none;\n            padding: 20px 5px 10px 5px;\n            height: 100%;\n            width: 100%;\n            border: none;\n            font: 400 1em/1.2 'Roboto', sans-serif;\n            color: #f1f1f1;\n            background: none;\n          }\n          /* textarea styling */\n          textarea {\n            outline: none;\n            margin: 20px 5px 10px 5px;\n            height: 76%;\n            width: 100%;\n            border: none;\n            resize: none;\n            font: 400 1em/1.2 'Montserrat', sans-serif;\n            color: #f1f1f1;\n            background: none;\n          }\n          /* label styling */\n          label {\n            position: absolute;\n            font-family: 'Montserrat', sans-serif;\n            color: #f1f1f1;\n            height: 100%;\n            width: 100%;\n            bottom: 0;\n            left: 0;\n            pointer-events: none;\n            font-size: 16px;\n            border-bottom: 1px solid #f1f1f1;\n          }\n          label::after {\n            position: absolute;\n            content: '';\n            height: 100%;\n            width: 100%;\n            bottom: 0;\n            left: 0;\n            transform: translateX(-100%);\n            border-bottom: 3px solid #f1f1f1;\n            transition: transform 0.3s ease;\n          }\n          label > span {\n            position: absolute;\n            bottom: 5px;\n            left: 0;\n            transition: all 0.3s ease;\n          }\n          input:focus + label {\n            border: none;\n          }\n          input:focus + label span,\n          input:valid + label span {\n            transform: translateY(-200%);\n            font-size: 0.8em;\n            font-weight: 700;\n            color: #f1f1f1;\n          }\n          input:focus + label::after {\n            transform: translateX(0%);\n            color: #f1f1f1;\n          }\n          textarea:focus + label {\n            border: none;\n            color: #f1f1f1;\n          }\n          textarea:focus + label span,\n          textarea:valid + label span {\n            transform: translateY(-520%);\n            font-size: 0.8em;\n            font-weight: 700;\n            color: #f1f1f1;\n            margin-bottom: 20px;\n          }\n          textarea:focus + label::after {\n            transform: translateX(0%);\n          }\n          button,\n          button:hover {\n            transition: 0.5s;\n          }\n          button {\n            margin-top: 25px;\n            padding: 20px;\n            letter-spacing: 2px;\n            border-radius: 5px;\n            font-family: 'Montserrat', sans-serif;\n            text-transform: uppercase;\n            color: rgb(25, 3, 22);\n            opacity: 1;\n            background: #f1f1f1;\n          }\n          button:hover {\n            opacity: 0.65;\n          }\n          button span:nth-child(2) {\n            display: none;\n          }\n          button:focus:nth-child(2) {\n            display: inline;\n          }\n          button:focus:nth-child(1) {\n            display: none;\n          }\n\n          @media screen and (max-width: 1150px) {\n            .flexOne p {\n              font-size: 20px;\n            }\n          }\n\n          @media screen and (max-width: 1015px) {\n            .flex {\n              flex-direction: column;\n            }\n\n            p {\n              text-align: center;\n              margin-top: 50px;\n            }\n\n            .flexOne {\n              width: 75%;\n              margin: 0 auto;\n            }\n\n            .flexTwo {\n              margin: 0 8%;\n              width: 75%;\n            }\n          }\n\n          @media only screen and (max-width: 900px) {\n            h1 {\n              font-size: 12vw;\n            }\n          }\n\n          @media only screen and (max-width: 900px) {\n            .flexOne p {\n              font-size: 20px;\n            }\n          }\n          @media only screen and (max-width: 600px) {\n            .flexOne p {\n              font-size: 16px;\n            }\n\n            .title {\n              width: 90%;\n            }\n          }\n\n          @media only screen and (max-width: 380px) {\n            .flexOne p {\n              font-size: 14px;\n            }\n            label {\n              font-size: 14px;\n            }\n          }\n        `}</style>\n      </>\n    );\n  }\n}\n","import Layout from '../components/MyLayout';\nconst contentful = require('contentful');\nimport ClientImages from '../components/ClientImages';\nimport TestHeader from '../components/TestHeader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport video from '../assets/videosHead.svg';\nimport photos from '../assets/photosHead.svg';\nimport GalleryComp from '../components/ContactComp';\n\nconst ColorCircularProgress = withStyles({\n  root: {\n    color: '#f1f1f1',\n  },\n})(CircularProgress);\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      media: [],\n    };\n  }\n\n  componentDidMount() {\n    const client = contentful.createClient({\n      space: 'sqmp3jmwaedr',\n      accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU',\n    });\n\n    client.getEntries({ content_type: 'picsAndVideos' }).then(response => {\n      this.setState({\n        media: response.items,\n      });\n    });\n  }\n\n  render() {\n    const videos = this.state.media.map((videos, i) => {\n      if (videos.fields.videos) {\n        return videos.fields.videos.map((videos, i) => {\n          return (\n            <>\n              <div className='pictures'>\n                <div className='top'>\n                  <video width='400' height='320' controls>\n                    <source src={videos.fields.file.url} type='video/mp4' />\n                    ]Your browser does not support the video tag.\n                  </video>\n                </div>\n                <div className='bottom'>\n                  <p>{videos.fields.title}</p>\n                </div>\n              </div>\n\n              <style jsx>{`\n                p {\n                  font-family: 'Roboto', sans-serif;\n                  font-size: 24px;\n                  font-weight: 700;\n                  color: #f1f1f1;\n                  text-align: center;\n                }\n\n                .pictures {\n                  width: 40%;\n                  margin: 25px auto;\n                  position: relative;\n                }\n\n                video {\n                  width: 100%;\n                  height: auto;\n                }\n\n                .bottom {\n                  margin-top: -15px;\n                }\n                @media screen and (max-width: 800px) {\n                  p {\n                    font-size: 20px;\n                  }\n                  .title {\n                    width: 90%;\n                  }\n                }\n                @media screen and (max-width: 650px) {\n                  .pictures {\n                    width: 300px;\n                  }\n                  .bottom {\n                    margin-top: -15px;\n                  }\n                }\n\n                @media screen and (max-width: 600px) {\n                  p {\n                    font-size: 16px;\n                  }\n                }\n              `}</style>\n            </>\n          );\n        });\n      }\n    });\n\n    const pictures = this.state.media.map((pictures, i) => {\n      if (pictures.fields.pictures) {\n        return pictures.fields.pictures.map((pictures, i) => {\n          return (\n            <>\n              <div className='pictures'>\n                <div className='top'>\n                  <img\n                    src={pictures.fields.file.url}\n                    alt={pictures.fields.title}\n                  />\n                </div>\n                <div className='bottom'>\n                  <p>{pictures.fields.title}</p>\n                </div>\n              </div>\n\n              <style jsx>{`\n                p {\n                  font-family: 'Roboto', sans-serif;\n                  font-size: 24px;\n                  font-weight: 700;\n                  color: #f1f1f1;\n                }\n\n                .pictures {\n                  width: 30%;\n                  margin: 25px auto;\n                }\n\n                .pictures .top {\n                  max-width: 300px;\n                  max-height: 400px;\n                }\n\n                img {\n                  width: 100%;\n                  height: auto;\n                }\n\n                .bottom {\n                  margin-top: -20px;\n                  max-width: 300px;\n                  text-align: center;\n                }\n                @media screen and (max-width: 1015px) {\n                  .pictures {\n                    width: 40%;\n                    margin: 0 auto;\n                  }\n                }\n\n                @media screen and (max-width: 800px) {\n                  p {\n                    font-size: 20px;\n                  }\n                  .title {\n                    width: 90%;\n                  }\n                }\n\n                @media screen and (max-width: 650px) {\n                  .pictures {\n                    width: 300px;\n                  }\n                  .bottom {\n                    margin-top: -15px;\n                  }\n                  .flexIt {\n                    width: 57%;\n                  }\n                }\n\n                @media screen and (max-width: 600px) {\n                  p {\n                    font-size: 16px;\n                  }\n                }\n              `}</style>\n            </>\n          );\n        });\n      }\n    });\n\n    return (\n      <Layout>\n        <div className='wrapper'>\n          <div className='title'>\n            <h3>PHOTOS</h3>\n          </div>\n          <div className='flexIt'>\n            <GalleryComp />\n            {/* {this.state.media.length === 0 ? (\n              <ColorCircularProgress size={100} thickness={5} />\n            ) : (\n              pictures\n            )} */}\n          </div>\n          <div className='title video'>\n            <img src={video} alt='Videos of good enough live karaoke' />\n          </div>\n          <div className='flexIt'>\n            {' '}\n            {this.state.media.length === 0 ? (\n              <ColorCircularProgress size={100} thickness={5} />\n            ) : (\n              videos\n            )}\n          </div>\n          <style jsx>{`\n            h3 {\n              font-family: 'Concert One', sans-serif;\n              white-space: nowrap;\n              margin: 0 -5px 0 0;\n              letter-spacing: 5px;\n              line-height: 1;\n              font-size: 7vw;\n              font-weight: 100;\n              text-align: center;\n              color: #fee;\n              text-shadow: 0 -40px 100px, 0 0 2px, 0 0 1em #e53441,\n                0 0 0.5em #e53441, 0 0 0.1em #e53441, 0 10px 3px #000;\n            }\n            .flexIt {\n              border: 10px solid #f1f1f1;\n              border-radius: 25px;\n              display: flex;\n              width: 70%;\n              flex-wrap: wrap;\n              justify-content: center;\n              margin: 0 auto;\n              padding: 50px;\n              min-height: 55vh;\n              max-width: 1400px;\n              margin-bottom: 50px;\n            }\n\n            .title {\n              width: 80%;\n              margin: 0 auto;\n              margin-bottom: 50px;\n            }\n\n            .video {\n              margin-top: 100px;\n            }\n\n            .wrapper {\n              margin-top: 18vh;\n            }\n\n            .clientTitle {\n              margin-bottom: 50px;\n            }\n            .clientTitleTest {\n              margin-top: 150px;\n              margin-bottom: 80px;\n            }\n\n            @media screen and (max-width: 800px) {\n              .title {\n                width: 90%;\n              }\n              .flexIt {\n                width: 57%;\n              }\n            }\n          `}</style>\n        </div>\n      </Layout>\n    );\n  }\n}\n"],"mappings":"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","sourceRoot":""}