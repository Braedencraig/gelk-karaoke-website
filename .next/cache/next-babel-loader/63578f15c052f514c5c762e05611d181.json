{"ast":null,"code":"var _jsxFileName = \"/Users/braedencraig/Desktop/GELK-SITE/components/MyLayout.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from './Header';\nimport TestHeader from '../components/TestHeader';\nimport Head from 'next/head';\nimport Footer from '../components/Footer';\nconst layoutStyle = {\n  margin: -9,\n  background: 'black',\n  height: '150vh',\n  background: '#000 url(//images.weserv.nl/?url=i.imgur.com/6QJjYMe.jpg)  center no-repeat',\n  backgroundSize: 'cover',\n  margin: 0\n};\nconst client = contentful.createClient({\n  // This is the space ID. A space is like a project folder in Contentful terms\n  space: 'sqmp3jmwaedr',\n  // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n  accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU'\n}); // content type relates to the content type name in contentful\n// figured it outttt\n// 'post' instead of songList, post is linked to author so when post response you get author object as well\n\nclient.getEntries({\n  content_type: 'about'\n}).then(response => {\n  this.setState({\n    about: response.items\n  });\n  console.log(response.items);\n});\n\nconst Layout = props => __jsx(React.Fragment, null, __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, __jsx(\"meta\", {\n  name: \"viewport\",\n  content: \"width=device-width, initial-scale=1\",\n  className: \"jsx-1530463628\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  charSet: \"utf-8\",\n  className: \"jsx-1530463628\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), __jsx(_JSXStyle, {\n  id: \"1530463628\",\n  __self: this\n}, \"body{background:#000;box-sizing:border-box;margin:0;padding:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmFlZGVuY3JhaWcvRGVza3RvcC9HRUxLLVNJVEUvY29tcG9uZW50cy9NeUxheW91dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ3VCLEFBR3lCLGdCQUNNLHNCQUNiLFNBQ0MsVUFDWiIsImZpbGUiOiIvVXNlcnMvYnJhZWRlbmNyYWlnL0Rlc2t0b3AvR0VMSy1TSVRFL2NvbXBvbmVudHMvTXlMYXlvdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZGVyIGZyb20gJy4vSGVhZGVyJztcbmltcG9ydCBUZXN0SGVhZGVyIGZyb20gJy4uL2NvbXBvbmVudHMvVGVzdEhlYWRlcic7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuLi9jb21wb25lbnRzL0Zvb3Rlcic7XG5cbmNvbnN0IGxheW91dFN0eWxlID0ge1xuICBtYXJnaW46IC05LFxuICBiYWNrZ3JvdW5kOiAnYmxhY2snLFxuICBoZWlnaHQ6ICcxNTB2aCcsXG4gIGJhY2tncm91bmQ6XG4gICAgJyMwMDAgdXJsKC8vaW1hZ2VzLndlc2Vydi5ubC8/dXJsPWkuaW1ndXIuY29tLzZRSmpZTWUuanBnKSAgY2VudGVyIG5vLXJlcGVhdCcsXG4gIGJhY2tncm91bmRTaXplOiAnY292ZXInLFxuICBtYXJnaW46IDAsXG59O1xuXG5jb25zdCBjbGllbnQgPSBjb250ZW50ZnVsLmNyZWF0ZUNsaWVudCh7XG4gIC8vIFRoaXMgaXMgdGhlIHNwYWNlIElELiBBIHNwYWNlIGlzIGxpa2UgYSBwcm9qZWN0IGZvbGRlciBpbiBDb250ZW50ZnVsIHRlcm1zXG4gIHNwYWNlOiAnc3FtcDNqbXdhZWRyJyxcbiAgLy8gVGhpcyBpcyB0aGUgYWNjZXNzIHRva2VuIGZvciB0aGlzIHNwYWNlLiBOb3JtYWxseSB5b3UgZ2V0IGJvdGggSUQgYW5kIHRoZSB0b2tlbiBpbiB0aGUgQ29udGVudGZ1bCB3ZWIgYXBwXG4gIGFjY2Vzc1Rva2VuOiAnMDFUc0Z4WlIybXJ3X1ZXc3VDdHpaQ0JDektzcnZDVERYOWlzLTZVUHpxVScsXG59KTtcbi8vIGNvbnRlbnQgdHlwZSByZWxhdGVzIHRvIHRoZSBjb250ZW50IHR5cGUgbmFtZSBpbiBjb250ZW50ZnVsXG4vLyBmaWd1cmVkIGl0IG91dHR0dFxuLy8gJ3Bvc3QnIGluc3RlYWQgb2Ygc29uZ0xpc3QsIHBvc3QgaXMgbGlua2VkIHRvIGF1dGhvciBzbyB3aGVuIHBvc3QgcmVzcG9uc2UgeW91IGdldCBhdXRob3Igb2JqZWN0IGFzIHdlbGxcbmNsaWVudC5nZXRFbnRyaWVzKHsgY29udGVudF90eXBlOiAnYWJvdXQnIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICB0aGlzLnNldFN0YXRlKHtcbiAgICBhYm91dDogcmVzcG9uc2UuaXRlbXMsXG4gIH0pO1xuICBjb25zb2xlLmxvZyhyZXNwb25zZS5pdGVtcyk7XG59KTtcblxuY29uc3QgTGF5b3V0ID0gcHJvcHMgPT4gKFxuICA8PlxuICAgIDxIZWFkPlxuICAgICAgPG1ldGEgbmFtZT0ndmlld3BvcnQnIGNvbnRlbnQ9J3dpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xJyAvPlxuICAgICAgPG1ldGEgY2hhclNldD0ndXRmLTgnIC8+XG4gICAgPC9IZWFkPlxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICBib2R5IHtcbiAgICAgICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICA8ZGl2IHN0eWxlPXtsYXlvdXRTdHlsZX0+XG4gICAgICA8VGVzdEhlYWRlciAvPlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPEZvb3RlciAvPlxuICAgIDwvZGl2PlxuICA8Lz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IExheW91dDtcbiJdfQ== */\\n/*@ sourceURL=/Users/braedencraig/Desktop/GELK-SITE/components/MyLayout.js */\"), __jsx(\"div\", {\n  style: layoutStyle,\n  className: \"jsx-1530463628\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, __jsx(TestHeader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), props.children, __jsx(Footer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})));\n\nexport default Layout;","map":{"version":3,"sources":["/Users/braedencraig/Desktop/GELK-SITE/components/MyLayout.js"],"names":["Header","TestHeader","Head","Footer","layoutStyle","margin","background","height","backgroundSize","client","contentful","createClient","space","accessToken","getEntries","content_type","then","response","setState","about","items","console","log","Layout","props","children"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,CAAC,CADS;AAElBC,EAAAA,UAAU,EAAE,OAFM;AAGlBC,EAAAA,MAAM,EAAE,OAHU;AAIlBD,EAAAA,UAAU,EACR,6EALgB;AAMlBE,EAAAA,cAAc,EAAE,OANE;AAOlBH,EAAAA,MAAM,EAAE;AAPU,CAApB;AAUA,MAAMI,MAAM,GAAGC,UAAU,CAACC,YAAX,CAAwB;AACrC;AACAC,EAAAA,KAAK,EAAE,cAF8B;AAGrC;AACAC,EAAAA,WAAW,EAAE;AAJwB,CAAxB,CAAf,C,CAMA;AACA;AACA;;AACAJ,MAAM,CAACK,UAAP,CAAkB;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAAlB,EAA6CC,IAA7C,CAAkDC,QAAQ,IAAI;AAC5D,OAAKC,QAAL,CAAc;AACZC,IAAAA,KAAK,EAAEF,QAAQ,CAACG;AADJ,GAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,KAArB;AACD,CALD;;AAOA,MAAMG,MAAM,GAAGC,KAAK,IAClB,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,IAAI,EAAC,UAAX;AAAsB,EAAA,OAAO,EAAC,qCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAM,EAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;AAAA;AAAA;AAAA,+iFAaE;AAAK,EAAA,KAAK,EAAEpB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGoB,KAAK,CAACC,QAFT,EAGE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CAbF,CADF;;AAsBA,eAAeF,MAAf","sourcesContent":["import Header from './Header';\nimport TestHeader from '../components/TestHeader';\nimport Head from 'next/head';\nimport Footer from '../components/Footer';\n\nconst layoutStyle = {\n  margin: -9,\n  background: 'black',\n  height: '150vh',\n  background:\n    '#000 url(//images.weserv.nl/?url=i.imgur.com/6QJjYMe.jpg)  center no-repeat',\n  backgroundSize: 'cover',\n  margin: 0,\n};\n\nconst client = contentful.createClient({\n  // This is the space ID. A space is like a project folder in Contentful terms\n  space: 'sqmp3jmwaedr',\n  // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n  accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU',\n});\n// content type relates to the content type name in contentful\n// figured it outttt\n// 'post' instead of songList, post is linked to author so when post response you get author object as well\nclient.getEntries({ content_type: 'about' }).then(response => {\n  this.setState({\n    about: response.items,\n  });\n  console.log(response.items);\n});\n\nconst Layout = props => (\n  <>\n    <Head>\n      <meta name='viewport' content='width=device-width, initial-scale=1' />\n      <meta charSet='utf-8' />\n    </Head>\n    <style jsx global>{`\n      body {\n        background: #000;\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n      }\n    `}</style>\n    <div style={layoutStyle}>\n      <TestHeader />\n      {props.children}\n      <Footer />\n    </div>\n  </>\n);\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}