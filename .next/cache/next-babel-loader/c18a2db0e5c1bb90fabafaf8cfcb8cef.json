{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/braedencraig/Desktop/GELK-SITE/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\n\nvar contentful = require('contentful');\n\nvar About =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(About, _React$Component);\n\n  function About(props) {\n    var _this;\n\n    _classCallCheck(this, About);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n    _this.state = {\n      articles: []\n    };\n    return _this;\n  }\n\n  _createClass(About, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var client = contentful.createClient({\n        // This is the space ID. A space is like a project folder in Contentful terms\n        space: 'sqmp3jmwaedr',\n        // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n        accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU'\n      }); // content type relates to the content type name in contentful\n      // figured it outttt\n      // 'post' instead of songList, post is linked to author so when post response you get author object as well\n\n      client.getEntries({\n        content_type: 'post'\n      }).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          articles: response.items\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ass = this.state.articles.map(function (article, i) {\n        console.log(article);\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: article.fields.featuredImage.fields.file.url,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), article.fields.title);\n      });\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, ass, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"This is the about page\"));\n    }\n  }]);\n\n  return About;\n}(React.Component);\n\nexport { About as default };","map":{"version":3,"sources":["/Users/braedencraig/Desktop/GELK-SITE/pages/about.js"],"names":["Layout","contentful","require","About","props","state","articles","client","createClient","space","accessToken","getEntries","content_type","then","response","console","log","setState","items","ass","map","article","i","fields","featuredImage","file","url","title","React","Component"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA;;AAClB,UAAMC,MAAM,GAAGN,UAAU,CAACO,YAAX,CAAwB;AACrC;AACAC,QAAAA,KAAK,EAAE,cAF8B;AAGrC;AACAC,QAAAA,WAAW,EAAE;AAJwB,OAAxB,CAAf,CADkB,CAOlB;AACA;AACA;;AACAH,MAAAA,MAAM,CAACI,UAAP,CAAkB;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAlB,EAA4CC,IAA5C,CAAiD,UAAAC,QAAQ,EAAI;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZX,UAAAA,QAAQ,EAAEQ,QAAQ,CAACI;AADP,SAAd;AAGD,OALD;AAMD;;;6BACQ;AACP,UAAMC,GAAG,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAClDP,QAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,eACE;AAAK,UAAA,GAAG,EAAEC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAED,OAAO,CAACE,MAAR,CAAeC,aAAf,CAA6BD,MAA7B,CAAoCE,IAApC,CAAyCC,GAAnD;AAAwD,UAAA,GAAG,EAAC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGL,OAAO,CAACE,MAAR,CAAeI,KAFlB,CADF;AAMD,OARW,CAAZ;AASA,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF;AAMD;;;;EAzCgCS,KAAK,CAACC,S;;SAApB1B,K","sourcesContent":["import Layout from '../components/MyLayout';\nconst contentful = require('contentful');\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n    };\n  }\n\n  componentDidMount() {\n    const client = contentful.createClient({\n      // This is the space ID. A space is like a project folder in Contentful terms\n      space: 'sqmp3jmwaedr',\n      // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n      accessToken: '01TsFxZR2mrw_VWsuCtzZCBCzKsrvCTDX9is-6UPzqU',\n    });\n    // content type relates to the content type name in contentful\n    // figured it outttt\n    // 'post' instead of songList, post is linked to author so when post response you get author object as well\n    client.getEntries({ content_type: 'post' }).then(response => {\n      console.log(response);\n      this.setState({\n        articles: response.items,\n      });\n    });\n  }\n  render() {\n    const ass = this.state.articles.map((article, i) => {\n      console.log(article);\n      return (\n        <div key={i}>\n          <img src={article.fields.featuredImage.fields.file.url} alt='' />\n          {article.fields.title}\n        </div>\n      );\n    });\n    return (\n      <Layout>\n        {ass}\n        <p>This is the about page</p>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}