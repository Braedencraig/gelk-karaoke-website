{"ast":null,"code":"var _jsxFileName = \"/Users/braedencraig/Desktop/GELK-SITE/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Button from '@material-ui/core/Button';\nimport TestHeader from '../components/TestHeader';\nimport NeonLogo from '../components/NeonLogo';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(NeonLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-1158059052\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    height: \"50px\",\n    width: \"50px\",\n    fill: \"#FFFFFF\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    x: \"0px\",\n    y: \"0px\",\n    className: \"jsx-1158059052\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    \"fill-rule\": \"evenodd\",\n    d: \"M12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 Z M12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 Z M15.2928932,9.29289322 L16.7071068,10.7071068 L12,15.4142136 L7.29289322,10.7071068 L8.70710678,9.29289322 L12,12.5857864 L15.2928932,9.29289322 Z\",\n    className: \"jsx-1158059052\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))), __jsx(_JSXStyle, {\n    id: \"1158059052\",\n    __self: this\n  }, \"h1.jsx-1158059052,a.jsx-1158059052{font-family:'Arial';}ul.jsx-1158059052{padding:0;}li.jsx-1158059052{list-style:none;margin:5px 0;}a.jsx-1158059052{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-1158059052:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmFlZGVuY3JhaWcvRGVza3RvcC9HRUxLLVNJVEUvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JnQixBQUk2QixBQUlWLEFBSU0sQUFLSyxBQUtULFVBYmQsRUFjQSxJQVZlLElBUmYsU0FTQSxxQkFJYSxXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9icmFlZGVuY3JhaWcvRGVza3RvcC9HRUxLLVNJVEUvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9CdXR0b24nO1xuaW1wb3J0IFRlc3RIZWFkZXIgZnJvbSAnLi4vY29tcG9uZW50cy9UZXN0SGVhZGVyJztcbmltcG9ydCBOZW9uTG9nbyBmcm9tICcuLi9jb21wb25lbnRzL05lb25Mb2dvJztcblxuY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPE5lb25Mb2dvIC8+XG4gICAgey8qIDxCdXR0b24gdmFyaWFudD0nY29udGFpbmVkJyBjb2xvcj0ncHJpbWFyeSc+XG4gICAgICBIZWxsbyBXb3JsZFxuICAgIDwvQnV0dG9uPiBcbiAgICAgKi99XG4gICAgPGRpdj5cbiAgICAgIDxzdmdcbiAgICAgICAgaGVpZ2h0PSc1MHB4J1xuICAgICAgICB3aWR0aD0nNTBweCdcbiAgICAgICAgZmlsbD0nI0ZGRkZGRidcbiAgICAgICAgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJ1xuICAgICAgICB2aWV3Qm94PScwIDAgMjQgMjQnXG4gICAgICAgIHg9JzBweCdcbiAgICAgICAgeT0nMHB4J1xuICAgICAgPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGZpbGwtcnVsZT0nZXZlbm9kZCdcbiAgICAgICAgICBkPSdNMTIsMjMgQzUuOTI0ODY3NzUsMjMgMSwxOC4wNzUxMzIyIDEsMTIgQzEsNS45MjQ4Njc3NSA1LjkyNDg2Nzc1LDEgMTIsMSBDMTguMDc1MTMyMiwxIDIzLDUuOTI0ODY3NzUgMjMsMTIgQzIzLDE4LjA3NTEzMjIgMTguMDc1MTMyMiwyMyAxMiwyMyBaIE0xMiwyMSBDMTYuOTcwNTYyNywyMSAyMSwxNi45NzA1NjI3IDIxLDEyIEMyMSw3LjAyOTQzNzI1IDE2Ljk3MDU2MjcsMyAxMiwzIEM3LjAyOTQzNzI1LDMgMyw3LjAyOTQzNzI1IDMsMTIgQzMsMTYuOTcwNTYyNyA3LjAyOTQzNzI1LDIxIDEyLDIxIFogTTE1LjI5Mjg5MzIsOS4yOTI4OTMyMiBMMTYuNzA3MTA2OCwxMC43MDcxMDY4IEwxMiwxNS40MTQyMTM2IEw3LjI5Mjg5MzIyLDEwLjcwNzEwNjggTDguNzA3MTA2NzgsOS4yOTI4OTMyMiBMMTIsMTIuNTg1Nzg2NCBMMTUuMjkyODkzMiw5LjI5Mjg5MzIyIFonXG4gICAgICAgID48L3BhdGg+XG4gICAgICA8L3N2Zz5cbiAgICA8L2Rpdj5cblxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIGgxLFxuICAgICAgYSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgfVxuXG4gICAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG5cbiAgICAgIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICB9XG5cbiAgICAgIGE6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuLy8gICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcbi8vICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbi8vICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcblxuLy8gICByZXR1cm4ge1xuLy8gICAgIHNob3dzOiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KSxcbi8vICAgfTtcbi8vIH07XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xuIl19 */\\n/*@ sourceURL=/Users/braedencraig/Desktop/GELK-SITE/pages/index.js */\"));\n}; // Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map(entry => entry.show),\n//   };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/braedencraig/Desktop/GELK-SITE/pages/index.js"],"names":["Layout","Link","fetch","Button","TestHeader","NeonLogo","Index","props"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAC,4BAJR;AAKE,IAAA,OAAO,EAAC,WALV;AAME,IAAA,CAAC,EAAC,KANJ;AAOE,IAAA,CAAC,EAAC,KAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,iBAAU,SADZ;AAEE,IAAA,CAAC,EAAC,kbAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CANF;AAAA;AAAA;AAAA,ypGADiB;AAAA,CAAnB,C,CAmDA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Button from '@material-ui/core/Button';\nimport TestHeader from '../components/TestHeader';\nimport NeonLogo from '../components/NeonLogo';\n\nconst Index = props => (\n  <Layout>\n    <NeonLogo />\n    {/* <Button variant='contained' color='primary'>\n      Hello World\n    </Button> \n     */}\n    <div>\n      <svg\n        height='50px'\n        width='50px'\n        fill='#FFFFFF'\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 24 24'\n        x='0px'\n        y='0px'\n      >\n        <path\n          fill-rule='evenodd'\n          d='M12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 Z M12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 Z M15.2928932,9.29289322 L16.7071068,10.7071068 L12,15.4142136 L7.29289322,10.7071068 L8.70710678,9.29289322 L12,12.5857864 L15.2928932,9.29289322 Z'\n        ></path>\n      </svg>\n    </div>\n\n    <style jsx>{`\n      h1,\n      a {\n        font-family: 'Arial';\n      }\n\n      ul {\n        padding: 0;\n      }\n\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </Layout>\n);\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   console.log(`Show data fetched. Count: ${data.length}`);\n\n//   return {\n//     shows: data.map(entry => entry.show),\n//   };\n// };\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}